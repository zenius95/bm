// insta/test.js
const { runAppealProcess } = require('../insta/runInsta.js');
const settingsService = require('../utils/settingsService');

// II. Ch·∫°y test
async function runTest() {
    // ---- THAY ƒê·ªîI TH√îNG TIN C·ª¶A BRO V√ÄO ƒê√ÇY ----
    const account = {
        uid: 'elliotbryant60147216',
        password: 'Ooybiqd601472',
        twofa: 'V6NHYJGWK7YOKGF6F2U37TLYI3XAXSEH',
        proxy: 'http://FBZlGu:taRIgP@171.236.164.76:32618'
    };
    const bmIdToAppeal = '3711504885822571';

    // ------------------------------------------

    console.log(`B·∫Øt ƒë·∫ßu test v·ªõi account: ${account.uid} v√† BM ID: ${bmIdToAppeal}`);

    // H√†m callback ƒë·ªÉ log ti·∫øn tr√¨nh ra console
    const logCallback = (message) => {
        // X√≥a b·ªõt tag HTML cho d·ªÖ nh√¨n tr√™n console
        const cleanMessage = message.replace(/<[^>]*>/g, '');
        console.log(`[LOG] ${cleanMessage}`);
    };

    try {
        // Kh·ªüi t·∫°o settings tr∆∞·ªõc khi ch·∫°y
        await settingsService.initialize();
        console.log("Kh·ªüi t·∫°o Settings Service th√†nh c√¥ng.");

        const result = await runAppealProcess(account, bmIdToAppeal, logCallback);
        if (result) {
            console.log("\n‚úÖ QUY TR√åNH HO√ÄN T·∫§T TH√ÄNH C√îNG!");
        } else {
            console.log("\n‚ùå QUY TR√åNH TH·∫§T B·∫†I.");
        }
    } catch (error) {
        console.error(`\nüí• ƒê√É X·∫¢Y RA L·ªñI NGHI√äM TR·ªåNG: ${error.message}`);
        console.error(error.stack);
    }
}

// Ch·∫°y h√†m test
runTest();