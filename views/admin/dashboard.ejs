<%
// Helper functions
const formatNumber = (num) => (num || 0).toLocaleString('vi-VN');
const formatCurrency = (num) => (num || 0).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
const getChangeIndicator = (change) => {
    const changeNum = Number(change) || 0;
    if (changeNum > 0) return { icon: 'ri-arrow-up-line', color: 'text-green-400' };
    if (changeNum < 0) return { icon: 'ri-arrow-down-line', color: 'text-red-400' };
    return { icon: 'ri-subtract-line', color: 'text-gray-500' };
};
const periodLabels = { day: 'Hôm nay', week: 'Tuần này', month: 'Tháng này', year: 'Năm nay', all: 'Toàn thời gian' };
const currentPeriodLabel = periodLabels[currentPeriod] || 'Tùy chỉnh';
%>

<div class="space-y-8">
    <!-- Header and Period Filter -->
    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
        <div>
            <h1 class="text-3xl font-bold text-white">Dashboard</h1>
            <p class="mt-1 text-gray-400">Tổng quan hệ thống - Dữ liệu cho: <span class="font-semibold text-blue-400"><%= currentPeriodLabel %></span></p>
        </div>
        <div class="relative">
            <select id="period-filter" class="form-select !pl-10">
                <option value="day" <%= currentPeriod === 'day' ? 'selected' : '' %>>Hôm nay</option>
                <option value="week" <%= currentPeriod === 'week' ? 'selected' : '' %>>Tuần này</option>
                <option value="month" <%= currentPeriod === 'month' ? 'selected' : '' %>>Tháng này</option>
                <option value="year" <%= currentPeriod === 'year' ? 'selected' : '' %>>Năm nay</option>
                <option value="all" <%= currentPeriod === 'all' ? 'selected' : '' %>>Toàn thời gian</option>
            </select>
            <i class="ri-calendar-2-line text-gray-500 absolute left-3 top-1/2 -translate-y-1/2"></i>
        </div>
    </div>

    <!-- Main Stats Cards -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- Revenue Card -->
        <div class="bg-white/5 backdrop-blur-lg border border-white/10 rounded-xl p-5 transition-all duration-300 hover:border-green-400/50 hover:shadow-2xl hover:shadow-green-500/10 transform hover:-translate-y-1">
            <div class="flex items-center justify-between">
                <span class="text-sm font-medium text-gray-400">Doanh số</span>
                <i class="ri-wallet-3-line text-2xl text-green-400"></i>
            </div>
            <p class="mt-2 text-3xl font-bold text-white"><%= formatCurrency(stats.revenue.current) %></p>
            <% const revenueChange = getChangeIndicator(stats.revenue.changePercentage); %>
            <p class="text-xs text-gray-400 mt-1 flex items-center <%= revenueChange.color %>">
                <i class="<%= revenueChange.icon %> mr-1"></i>
                <%= stats.revenue.changePercentage %>% so với kỳ trước
            </p>
        </div>
        <!-- Orders Card -->
        <div class="bg-white/5 backdrop-blur-lg border border-white/10 rounded-xl p-5 transition-all duration-300 hover:border-blue-400/50 hover:shadow-2xl hover:shadow-blue-500/10 transform hover:-translate-y-1">
            <div class="flex items-center justify-between">
                <span class="text-sm font-medium text-gray-400">Đơn hàng mới</span>
                <i class="ri-shopping-cart-line text-2xl text-blue-400"></i>
            </div>
            <p class="mt-2 text-3xl font-bold text-white"><%= formatNumber(stats.orders.current) %></p>
            <% const orderChange = getChangeIndicator(stats.orders.changePercentage); %>
            <p class="text-xs text-gray-400 mt-1 flex items-center <%= orderChange.color %>">
                 <i class="<%= orderChange.icon %> mr-1"></i>
                 <%= stats.orders.changePercentage %>% so với kỳ trước
            </p>
        </div>
        <!-- New Users Card -->
        <div class="bg-white/5 backdrop-blur-lg border border-white/10 rounded-xl p-5 transition-all duration-300 hover:border-purple-400/50 hover:shadow-2xl hover:shadow-purple-500/10 transform hover:-translate-y-1">
            <div class="flex items-center justify-between">
                <span class="text-sm font-medium text-gray-400">Thành viên mới</span>
                <i class="ri-user-add-line text-2xl text-purple-400"></i>
            </div>
            <p class="mt-2 text-3xl font-bold text-white"><%= formatNumber(stats.newUsers.current) %></p>
             <% const userChange = getChangeIndicator(stats.newUsers.changePercentage); %>
            <p class="text-xs text-gray-400 mt-1 flex items-center <%= userChange.color %>">
                 <i class="<%= userChange.icon %> mr-1"></i>
                 <%= stats.newUsers.changePercentage %>% so với kỳ trước
            </p>
        </div>
        <!-- Costs Card -->
        <div class="bg-white/5 backdrop-blur-lg border border-white/10 rounded-xl p-5 transition-all duration-300 hover:border-yellow-400/50 hover:shadow-2xl hover:shadow-yellow-500/10 transform hover:-translate-y-1">
            <div class="flex items-center justify-between">
                <span class="text-sm font-medium text-gray-400">Chi phí đơn hàng</span>
                 <i class="ri-exchange-dollar-line text-2xl text-yellow-400"></i>
            </div>
            <p class="mt-2 text-3xl font-bold text-white"><%= formatCurrency(stats.costs.current) %></p>
             <% const costChange = getChangeIndicator(stats.costs.changePercentage); %>
            <p class="text-xs text-gray-400 mt-1 flex items-center <%= costChange.color %>">
                <i class="<%= costChange.icon %> mr-1"></i>
                <%= stats.costs.changePercentage %>% so với kỳ trước
            </p>
        </div>
    </div>

    <!-- Revenue and Orders Chart -->
    <div class="bg-white/5 backdrop-blur-lg border border-white/10 rounded-xl p-6">
        <h2 class="text-lg font-semibold text-white mb-4">Biểu đồ Doanh thu & Đơn hàng</h2>
        <div class="h-80">
            <canvas id="revenueChart"></canvas>
        </div>
    </div>
    
    <!-- Detailed Stats -->
    <div>
        <h2 class="text-xl font-semibold text-white mb-4">Thống kê chi tiết (Toàn thời gian)</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Accounts Stats -->
            <div class="bg-white/5 border border-white/10 rounded-xl p-5">
                <h3 class="font-semibold text-white mb-4 flex items-center gap-2"><i class="ri-group-line text-blue-400"></i> Accounts</h3>
                <div class="space-y-3 text-sm">
                    <div class="flex justify-between"><span class="text-gray-400">Tổng</span><strong class="font-mono text-white"><%= formatNumber(detailedStats.accounts.total) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Live</span><strong class="font-mono text-green-400"><%= formatNumber(detailedStats.accounts.live) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Die</span><strong class="font-mono text-red-400"><%= formatNumber(detailedStats.accounts.die) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Chưa check</span><strong class="font-mono text-gray-500"><%= formatNumber(detailedStats.accounts.unchecked) %></strong></div>
                </div>
            </div>
            <!-- Proxies Stats -->
            <div class="bg-white/5 border border-white/10 rounded-xl p-5">
                 <h3 class="font-semibold text-white mb-4 flex items-center gap-2"><i class="ri-swap-box-line text-purple-400"></i> Proxies</h3>
                <div class="space-y-3 text-sm">
                    <div class="flex justify-between"><span class="text-gray-400">Tổng</span><strong class="font-mono text-white"><%= formatNumber(detailedStats.proxies.total) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Available</span><strong class="font-mono text-green-400"><%= formatNumber(detailedStats.proxies.available) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Assigned</span><strong class="font-mono text-yellow-400"><%= formatNumber(detailedStats.proxies.assigned) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Dead</span><strong class="font-mono text-red-400"><%= formatNumber(detailedStats.proxies.dead) %></strong></div>
                </div>
            </div>
            <!-- Workers Stats -->
            <div class="bg-white/5 border border-white/10 rounded-xl p-5">
                 <h3 class="font-semibold text-white mb-4 flex items-center gap-2"><i class="ri-cpu-line text-yellow-400"></i> Workers</h3>
                <div class="space-y-3 text-sm">
                    <div class="flex justify-between"><span class="text-gray-400">Tổng</span><strong class="font-mono text-white"><%= formatNumber(detailedStats.workers.total) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Online</span><strong class="font-mono text-green-400"><%= formatNumber(detailedStats.workers.online) %></strong></div>
                    <div class="flex justify-between"><span class="text-gray-400">Offline</span><strong class="font-mono text-red-400"><%= formatNumber(detailedStats.workers.offline) %></strong></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    // Period Filter Logic
    const periodFilter = document.getElementById('period-filter');
    periodFilter.addEventListener('change', (e) => {
        const selectedPeriod = e.target.value;
        const url = new URL(window.location);
        url.searchParams.set('period', selectedPeriod);
        window.location.href = url.toString();
    });
    
    // Chart.js Logic
    const ctx = document.getElementById('revenueChart');
    if (ctx) {
        // Use EJS to inject server-side data into the script
        const chartData = <%- JSON.stringify(chartData || { labels: [], revenues: [], orders: [], timeUnit: 'day' }) %>;
        
        const canvas = document.getElementById('revenueChart');
        const chartCtx = canvas.getContext('2d');

        // Create gradients
        const revenueGradient = chartCtx.createLinearGradient(0, 0, 0, canvas.height);
        revenueGradient.addColorStop(0, 'rgba(34, 197, 94, 0.6)');
        revenueGradient.addColorStop(1, 'rgba(34, 197, 94, 0)');
        
        const orderGradient = chartCtx.createLinearGradient(0, 0, 0, canvas.height);
        orderGradient.addColorStop(0, 'rgba(59, 130, 246, 0.8)');
        orderGradient.addColorStop(1, 'rgba(59, 130, 246, 0.4)');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: chartData.labels,
                datasets: [
                    {
                        label: 'Doanh số (VND)',
                        data: chartData.revenues,
                        backgroundColor: revenueGradient,
                        borderColor: 'rgba(34, 197, 94, 1)',
                        borderWidth: 2,
                        yAxisID: 'yRevenue',
                        type: 'line',
                        tension: 0.4,
                        fill: true,
                        pointBackgroundColor: 'rgba(34, 197, 94, 1)',
                        pointBorderColor: '#111827',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(34, 197, 94, 1)',
                        pointRadius: 4,
                        pointHoverRadius: 7,
                        pointBorderWidth: 2,
                    },
                    {
                        label: 'Đơn hàng',
                        data: chartData.orders,
                        backgroundColor: orderGradient,
                        borderColor: 'rgba(59, 130, 246, 1)',
                        borderWidth: 0,
                        yAxisID: 'yOrders',
                        borderRadius: 6,
                        borderSkipped: false,
                        barPercentage: 0.6,
                        categoryPercentage: 0.7,
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                scales: {
                    x: {
                        type: 'time',
                        time: {
                             unit: chartData.timeUnit,
                             tooltipFormat: 'dd/MM/yyyy',
                             displayFormats: { day: 'dd/MM', week: 'dd/MM', month: 'MM/yyyy', year: 'yyyy', }
                        },
                        grid: { color: 'rgba(255, 255, 255, 0.1)', borderDash: [5, 5] },
                        ticks: { color: '#9ca3af' }
                    },
                    yRevenue: {
                        type: 'linear', position: 'left', beginAtZero: true,
                        grid: { color: 'rgba(255, 255, 255, 0.1)' },
                        ticks: { color: '#a7f3d0', callback: (v) => v >= 1e6 ? `${v/1e6}tr` : (v >= 1e3 ? `${v/1e3}k` : v) }
                    },
                    yOrders: {
                        type: 'linear', position: 'right', beginAtZero: true,
                        grid: { drawOnChartArea: false },
                        ticks: { color: '#93c5fd', precision: 0 }
                    }
                },
                 plugins: {
                    legend: { labels: { color: '#d1d5db', usePointStyle: true, boxWidth: 8 } },
                    tooltip: { 
                        enabled: true,
                        backgroundColor: 'rgba(17, 24, 39, 0.85)', titleColor: '#ffffff', bodyColor: '#d1d5db', 
                        borderColor: 'rgba(255, 255, 255, 0.1)', borderWidth: 1, padding: 12, cornerRadius: 8,
                        usePointStyle: true, boxPadding: 4,
                        callbacks: { 
                            label: (c) => `${c.dataset.label}: ${c.dataset.yAxisID==='yRevenue' ? new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(c.parsed.y) : c.parsed.y}` 
                        } 
                    }
                }
            }
        });
    }
});
</script>

