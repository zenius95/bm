<%- include('partials/_header.ejs', { title: 'User Management', page: 'users' }) %>

<div class="space-y-8">
    <div class="flex flex-col md:flex-row items-center justify-between gap-4">
        <div>
            <h1 class="text-3xl font-bold text-white">Quản Lý User</h1>
            <p class="mt-1 text-gray-400">Quản lý tài khoản người dùng và admin.</p>
        </div>
        <div>
             <button id="add-user-btn" class="inline-flex items-center justify-center px-5 py-2.5 bg-blue-600 border border-transparent rounded-md font-semibold text-white hover:bg-blue-700 transition-transform duration-200 hover:scale-105">
                <i class="ri-user-add-line -ml-1 mr-2"></i>
                <span>Thêm User</span>
            </button>
        </div>
    </div>

    <div class="bg-white/5 backdrop-blur-lg border border-white/10 rounded-xl overflow-hidden">
        <div class="overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-300">
                <thead class="text-xs text-gray-400 uppercase bg-white/5">
                    <tr>
                        <th scope="col" class="px-6 py-3">Username</th>
                        <th scope="col" class="px-6 py-3">Vai trò</th>
                        <th scope="col" class="px-6 py-3">Số dư</th>
                        <th scope="col" class="px-6 py-3">Ngày tạo</th>
                        <th scope="col" class="px-6 py-3">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach(user => { %>
                        <tr id="user-row-<%= user._id %>" class="border-b border-white/10 hover:bg-white/5 transition-colors duration-200">
                            <td class="px-6 py-4 font-medium text-white"><%= user.username %></td>
                            <td class="px-6 py-4">
                                <span class="px-2.5 py-1 text-xs font-semibold rounded-full <%= user.role === 'admin' ? 'bg-green-500/20 text-green-400' : 'bg-blue-500/20 text-blue-400' %>">
                                    <%= user.role %>
                                </span>
                            </td>
                            <td class="px-6 py-4 font-mono text-yellow-400"><%= user.balance.toLocaleString('vi-VN') %></td>
                            <td class="px-6 py-4 text-gray-400"><%= new Date(user.createdAt).toLocaleString('vi-VN') %></td>
                            <td class="px-6 py-4">
                                <button class="btn-edit-user p-2 rounded-md hover:bg-white/10 text-gray-400 transition" title="Sửa" data-id="<%= user._id %>" data-username="<%= user.username %>" data-role="<%= user.role %>" data-balance="<%= user.balance %>"><i class="ri-pencil-line"></i></button>
                                <button class="btn-delete-user p-2 rounded-md hover:bg-white/10 text-red-400 transition" title="Xóa" data-id="<%= user._id %>" data-username="<%= user.username %>"><i class="ri-delete-bin-line"></i></button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div id="user-modal" class="modal-container fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-[100] w-full max-w-lg p-4 hidden transform transition-all duration-300 ease-in-out scale-95 opacity-0">
    <div class="bg-gray-900/80 backdrop-blur-xl border border-white/10 rounded-2xl shadow-2xl shadow-black/20">
        <form id="user-form">
            <input type="hidden" id="user-id" name="id">
            <div class="p-6 border-b border-white/10">
                <h3 id="modal-title" class="text-xl font-bold text-white">Thêm User Mới</h3>
            </div>
            <div class="p-6 space-y-4">
                <div>
                    <label for="user-username" class="block text-sm font-medium text-gray-300 mb-2">Username</label>
                    <input type="text" id="user-username" name="username" class="form-input" required>
                </div>
                <div>
                    <label for="user-password" class="block text-sm font-medium text-gray-300 mb-2">Password</label>
                    <input type="password" id="user-password" name="password" class="form-input">
                    <p id="password-help" class="text-xs text-gray-500 mt-1">Để trống nếu không muốn thay đổi mật khẩu.</p>
                </div>
                 <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                     <div>
                        <label for="user-role" class="block text-sm font-medium text-gray-300 mb-2">Vai trò</label>
                        <select id="user-role" name="role" class="form-select">
                            <option value="user">User</option>
                            <option value="admin">Admin</option>
                        </select>
                    </div>
                     <div>
                        <label for="user-balance" class="block text-sm font-medium text-gray-300 mb-2">Số dư</label>
                        <input type="number" id="user-balance" name="balance" class="form-input" value="0" min="0">
                    </div>
                 </div>
            </div>
            <div class="px-6 py-4 bg-white/5 rounded-b-2xl flex justify-end items-center gap-3">
                <button type="button" class="btn-cancel px-4 py-2 bg-gray-700/50 hover:bg-gray-600/50 rounded-lg font-semibold text-sm text-white transition">Hủy</button>
                <button type="submit" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg font-semibold text-sm text-white transition">Lưu</button>
            </div>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Modal Logic
    const userModal = document.getElementById('user-modal');
    const userForm = document.getElementById('user-form');
    const modalTitle = document.getElementById('modal-title');
    const passwordHelp = document.getElementById('password-help');
    
    document.getElementById('add-user-btn').addEventListener('click', () => {
        userForm.reset();
        userForm.querySelector('#user-id').value = '';
        modalTitle.textContent = 'Thêm User Mới';
        passwordHelp.style.display = 'none';
        userForm.querySelector('#user-password').setAttribute('required', 'required');
        showModal(userModal);
    });

    document.querySelectorAll('.btn-edit-user').forEach(btn => {
        btn.addEventListener('click', () => {
            const { id, username, role, balance } = btn.dataset;
            userForm.reset();
            userForm.querySelector('#user-id').value = id;
            userForm.querySelector('#user-username').value = username;
            userForm.querySelector('#user-role').value = role;
            userForm.querySelector('#user-balance').value = balance;
            modalTitle.textContent = `Sửa User: ${username}`;
            passwordHelp.style.display = 'block';
            userForm.querySelector('#user-password').removeAttribute('required');
            showModal(userModal);
        });
    });

    userForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const id = userForm.querySelector('#user-id').value;
        const url = id ? `/admin/users/update/${id}` : '/admin/users/create';
        const formData = new FormData(userForm);
        const data = Object.fromEntries(formData.entries());

        // Nếu là form sửa và không nhập password thì không gửi đi
        if(id && !data.password) {
            delete data.password;
        }

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });
            const result = await response.json();
            if (result.success) {
                showToast(result.message, 'Thành công!', 'success');
                setTimeout(() => window.location.reload(), 1500);
            } else {
                showToast(result.message, 'Lỗi!', 'error');
            }
        } catch (error) {
            showToast('Lỗi kết nối server.', 'Lỗi mạng!', 'error');
        }
    });

    document.querySelectorAll('.btn-delete-user').forEach(btn => {
        btn.addEventListener('click', async () => {
            const { id, username } = btn.dataset;
            const confirmed = await showConfirm(`Bạn có chắc muốn XÓA VĨNH VIỄN user "${username}"?`, 'danger');
            if (confirmed) {
                try {
                     const response = await fetch(`/admin/users/hard-delete`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ ids: [id] })
                    });
                    const result = await response.json();
                    if(result.success) {
                        showToast(result.message, 'Thành công', 'success');
                        document.getElementById(`user-row-${id}`).remove();
                    } else {
                        showToast(result.message, 'Lỗi!', 'error');
                    }
                } catch(error) {
                    showToast('Lỗi kết nối server.', 'Lỗi mạng!', 'error');
                }
            }
        });
    });
});
</script>